// SIMPLE GRID - SASS/SCSS (deprecation-safe)

// 1) Load Sass math for division
@use "sass:math";

// 2) (Recommended) Load Google Fonts in HTML instead of Sass:
// <link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap" rel="stylesheet" />

// colors
$dark-grey: #333447;
$dark-gray: #333447; // alias

// universal
html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  left: 0;
  top: 0;
}

// typography
h1 { font-size: 2.5rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.375rem; }
h4 { font-size: 1.125rem; }
h5 { font-size: 1rem; }
h6 { font-size: 0.875rem; }
p  { font-size: 1.125rem; line-height: 1.8; }

// utility
.left   { text-align: left; }
.right  { text-align: right; }
.center { text-align: center; margin-left: auto; margin-right: auto; }
.justify{ text-align: justify; }
.hidden-sm { display: none; }

// grid
$width: 96%;
$gutter: 4%;
$breakpoint-small: 33.75em; // 540px
$breakpoint-med:   45em;    // 720px
$breakpoint-large: 60em;    // 960px

.container {
  width: 90%;
  margin-left: auto;
  margin-right: auto;

  @media only screen and (min-width: $breakpoint-small) {
    width: 80%;
  }

  @media only screen and (min-width: $breakpoint-large) {
    width: 75%;
    max-width: 60rem;
  }
}

.row {
  position: relative;
  width: 100%;
}

.row [class^="col"] {
  float: left;
  margin: 0.5rem 2%;
  min-height: 0.125rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12 {
  width: $width;
}

// Helper to compute column width without deprecated `/`
@function col-width($n) {
  // (($width / (12 / $n)) - ($gutter * (12 - $n) / 12))
  @return math.div($width, math.div(12, $n)) - math.div($gutter * (12 - $n), 12);
}

/* Small (default) cols */
.col-1-sm  { width: col-width(1); }
.col-2-sm  { width: col-width(2); }
.col-3-sm  { width: col-width(3); }
.col-4-sm  { width: col-width(4); }
.col-5-sm  { width: col-width(5); }
.col-6-sm  { width: col-width(6); }
.col-7-sm  { width: col-width(7); }
.col-8-sm  { width: col-width(8); }
.col-9-sm  { width: col-width(9); }
.col-10-sm { width: col-width(10); }
.col-11-sm { width: col-width(11); }
.col-12-sm { width: $width; }

/* Medium+ cols */
@media only screen and (min-width: $breakpoint-med) {
  .col-1  { width: col-width(1); }
  .col-2  { width: col-width(2); }
  .col-3  { width: col-width(3); }
  .col-4  { width: col-width(4); }
  .col-5  { width: col-width(5); }
  .col-6  { width: col-width(6); }
  .col-7  { width: col-width(7); }
  .col-8  { width: col-width(8); }
  .col-9  { width: col-width(9); }
  .col-10 { width: col-width(10); }
  .col-11 { width: col-width(11); }
  .col-12 { width: $width; }

  .hidden-sm { display: block; }
}
